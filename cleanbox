#!/usr/bin/env ruby
# frozen_string_literal: true

require 'optparse'

require 'pry'
require 'net/imap'
require 'mail'
require_relative 'lib/core_ext'
require_relative 'lib/connection'
require_relative 'lib/cleanbox'
require_relative 'lib/folder_checker'
require_relative 'lib/message'
require 'logger'

options = {
  host: 'imap.datanauts.co.uk',
  username: 'simon@sensadrome.com',
  clean_folders: %w[Panto Friends Family],
  whitelisted_domains: %w[filmfinances.co.uk datanauts.co.uk],
  list_domains: %w[facebookmail.com ebay.co.uk],
  list_folders: ['Admin', 'Amazon', 'Lists', 'Interests', 'School',
                 'Shopping', 'Apple', 'Ebay', 'TV and Film', 'Work', 'Misc'],
  domain_map: {
    'facebookmail.com' => 'Facebook',
    'developers.facebook.com' => 'Facebook',
    'ebay.co.uk' => 'Ebay',
    'apple.com' => 'Apple'
  },
  pretend: false,
  password: ENV['IMAP_PASSWORD'],
  sent_folder: 'Sent Messages',
  move_read: false
}

action = 'clean!'

# rubocop:disable Metrics/BlockLength
parsed_options = OptionParser.new do |opts|
  opts.banner = 'Usage: cleanbox [options]'

  opts.on('-v', '--verbose', 'Run verbosely') do |v|
    options[:verbose] = v
    options[:level] = 'debug'
  end

  opts.on('-h', '--help', 'Prints this help') do
    puts opts
    exit
  end

  opts.on('-n', '--pretend', 'Only show what would happen') do
    options[:pretend] = true
  end

  loglevel_help = 'log level, should be one of debug, info, warn, error'
  opts.on('-L', '--level loglevel', loglevel_help) do |value|
    options[:level] = value
  end

  host_help = "Set the IMAP hostname (default '#{options[:host]}'"
  opts.on('-H', '--host', host_help) do |val|
    options[:host] = val
  end

  opts.on('-u', '--user', 'Set IMAP username') do |val|
    options[:username] = val
  end

  opts.on('-p', '--password PASSWORD', 'Set IMAP password') do |val|
    options[:password] = val
  end

  logfile_help = 'Specify log file (defaults to STDOUT)'
  opts.on('-l', '--log-file LOGFILE', logfile_help) do |val|
    options[:log_file] = val
  end

  since_help = 'Only apply to messages since <parseable date>'
  opts.on('-s', '--since DATE', since_help) do |val|
    options[:since] = val
  end

  valid_from_help = 'Use addresses found since this date (default 1 year ago)'
  opts.on('-f', '--valid-from DATE', valid_from_help) do |val|
    options[:valid_from] = val
  end
end
# rubocop:enable Metrics/BlockLength

parsed_options.parse!
# Net::IMAP.debug = true

imap = Net::IMAP.new(options.delete(:host), ssl: true)
imap.authenticate 'PLAIN', options.delete(:username), options.delete(:password)
# imap.send(:send_command, 'GETMETADATA', 'Deleted Messages', '/private/specialuse')

action = 'show_lists!' if ARGV.last == 'list'
action = 'file_messages!' if %w[file filing].include?(ARGV.last)
# puts "Action: #{action}"
# puts "Args: #{ARGV.inspect}"

Cleanbox.new(imap, options).send(action)
